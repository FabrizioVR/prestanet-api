# Nombre de la aplicación
spring.application.name=prestanet-api

# Configuración del servidor
server.port=8080
server.servlet.context-path=/api

# Perfil activo
spring.profiles.active=dev

# Configuración de la base de datos
spring.datasource.url=jdbc:postgresql://ep-falling-rain-a6gapiz2.us-west-2.aws.neon.tech/prestanet-db?sslmode=require
spring.datasource.username=prestanet-db_owner
spring.datasource.password=XwQofa6MGTN7
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de JPA e Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true  # Mejora la legibilidad del SQL generado
spring.jpa.properties.hibernate.default_schema=public  # Especificar el esquema por defecto

# Inicialización de SQL
spring.sql.init.mode=always  # Se asegura que los scripts SQL siempre se ejecuten (cambiar a `never` si no se desean en producción)
spring.sql.init.continue-on-error=true  # Permite que continúe si algún script tiene errores

# Configuración de HikariCP
spring.datasource.hikari.pool-name=PrestanetHikariCP  # Nombre identificativo del pool de conexiones
spring.datasource.hikari.maximum-pool-size=15  # Tamaño máximo del pool (ajustado para un mejor rendimiento)
spring.datasource.hikari.minimum-idle=5  # Conexiones mínimas inactivas en el pool
spring.datasource.hikari.max-lifetime=1800000  # Vida útil máxima de una conexión (30 minutos)
spring.datasource.hikari.connection-timeout=30000  # Tiempo máximo de espera para obtener una conexión (30 segundos)
spring.datasource.hikari.validation-timeout=5000  # Tiempo de espera para validar una conexión (5 segundos)
spring.datasource.hikari.leak-detection-threshold=20000  # Tiempo para detectar posibles fugas de conexiones (20 segundos)

# Configuración adicional de PostgreSQL
spring.datasource.initialization-mode=always  # Permite inicializar la base de datos en todos los entornos (cambiar a `never` en producción)
spring.datasource.test-while-idle=true  # Valida conexiones cuando están inactivas
spring.datasource.validation-query=SELECT 1  # Consulta de validación para conexiones inactivas
